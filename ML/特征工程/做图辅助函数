def catPlot(feature, figsize=(14, 6), save=False, filename=None):
    feature_name = feature.capitalize()
    tmp = pd.crosstab(df[feature], df['target'], normalize='index') * 100
    tmp = tmp.reset_index()
    tmp.rename(columns={0:'NoFraud', 1:'Fraud'}, inplace=True)

    plt.figure(figsize=figsize)
    plt.suptitle(f'{feature_name} Distributions', fontsize=22)

    plt.subplot(121)
    g = sns.countplot(x=feature, data=df)
    # plt.legend(title='Fraud', loc='upper center', labels=['No', 'Yes'])

    g.set_title(f"{feature_name} Distribution", fontsize=19)
    g.set_xlabel(feature_name, fontsize=17)
    g.set_ylabel("Count", fontsize=17)
    for p in g.patches:
        height = p.get_height()
        g.text(p.get_x()+p.get_width()/2.,
                height + 3,
                '{:1.2f}%'.format(height/total*100),
                ha="center", fontsize=14) 

    plt.subplot(122)
    g1 = sns.countplot(x=feature, hue='target', data=df)
    plt.legend(title='Fraud', loc='best', labels=['No', 'Yes'])
    gt = g1.twinx()
    gt = sns.pointplot(x=feature, y='Fraud', data=tmp, 
                       color='black', scale=0.5,
                       legend=False)
    gt.set_ylabel("% of Fraud Transactions", fontsize=16)

    g1.set_title(f"{feature_name} by Target(isFraud)", fontsize=19)
    g1.set_xlabel(feature_name, fontsize=17)
    g1.set_ylabel("Count", fontsize=17)
    plt.subplots_adjust(hspace = 0.6, top = 0.85)
    if save:
        if filename:
            plt.savefig(f'../pics/{filename}.png', bbox_inches='tight', dpi=300)
        else:
            plt.savefig(f'../pics/{feature_name}.png', bbox_inches='tight', dpi=300)
    plt.show()
    
    
    
# numeric: box plot
def boxPlot(feature, save=False, filename=None):
    feature_name = feature.capitalize()
    fig, axs = plt.subplots(1, 2, tight_layout=True, figsize=(8, 4))
    axs[0].boxplot(df.loc[df.target == 0, feature])
    axs[0].set_xlabel('NoFraud')
    axs[1].boxplot(df.loc[df.target == 1, feature])
    axs[1].set_xlabel('Fraud')
    plt.suptitle(feature_name)
    if save:
        if filename:
            plt.savefig(f'../pics/{filename}.png', bbox_inches='tight', dpi=300)
        else:
            plt.savefig(f'../pics/{feature_name}.png', bbox_inches='tight', dpi=300)
    plt.show()



# numeric: distribution plot
def distPlot(feature, save=False, filename=None):
    feature_name = feature.capitalize()
    g = sns.distplot(df[df['target'] == 1][feature], label='Fraud')
    g = sns.distplot(df[df['target'] == 0][feature], label='NoFraud')
    g.legend()
    g.set_title(f"{feature_name} Distribution by Target", fontsize=20)
    g.set_xlabel(feature_name, fontsize=18)
    g.set_ylabel("Probability", fontsize=18)
    if save:
        if filename:
            plt.savefig(f'../pics/{filename}.png', bbox_inches='tight', dpi=300)
        else:
            plt.savefig(f'../pics/{feature_name}.png', bbox_inches='tight', dpi=300)
    plt.show()
